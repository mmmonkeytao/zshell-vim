snippet au
/***

* Copyright (c) Ares Cheng. All rights reserved.

***/

${1:}
endsnippet

snippet INC
#include "${1:TODO}"${2}
endsnippet

snippet inc
#include <${1:TODO}>${2}
endsnippet

snippet if
if (${1:/* condition */}) {
	${2:TODO}
}
endsnippet

snippet ei
else if (${1:/* condition */}) {
	${2:TODO}
}
endsnippet

snippet el
else {
	${1:TODO}
}
endsnippet

snippet re
return(${1:/* condition */});
endsnippet

snippet do 
do { 
	${2:TODO}
} while (${1:/* condition */});
endsnippet

snippet wh
while (${1:/*condition */}) {
	${2:TODO}
}
endsnippet

snippet sw
switch (${1:/* condition */}) {
	case ${2:c}: {
	}

	default: {
	}
	break;
}
endsnippet

snippet for 
for (auto ${2:iter} = ${1:c}.begin(); ${3:$2} != $1.end(); ${4:++iter}) {
	${5:TODO}
}
endsnippet

snippet cfor 
for (auto ${2:citer} = ${1:c}.cbegin(); ${3:$2} != $1.cend(); ${4:++citer}) {
	${5:TODO}
}
endsnippet

snippet For 
for (auto ${2:i} = 0; $2 != ${1}.size(); ${3:++}$2) {
	${4:TODO}
}
endsnippet

snippet F
for (auto& e : ${1:c}) {
}
endsnippet

snippet FOR
for (unsigned ${2:i} = 0; $2 < ${1:count}; ${3:++}$2) { 
	${4:TODO}
}
endsnippet

snippet try
try {
} catch catch (${1:/* condition */}) {
}
endsnippet

snippet ca
catch (${1:/* condition */}) { 
} 
endsnippet

snippet throw 
th (${1:/* condition */}); 
endsnippet

# std::vector 
snippet vec 
vector<${1:char}>   v${2}; 
endsnippet 
# std::list 
snippet lst 
list<${1:char}> l${2}; 
endsnippet 
# std::set 
snippet set 
set<${1:key}>   s${2}; 
endsnippet 
# std::map 
snippet map 
map<${1:key}, ${2:value}>   m${3}; 
endsnippet

snippet cl
class ${1:`Filename('$1_t', 'name')`}
{
public:
	$1 ();
	virtual ~$1 ();
private:
};
endsnippet

snippet b "bracket" i 
(${1})${2} 
endsnippet 
# 方括号 square bracket，设定为 st 而非 sb，避免与 b 冲突
snippet st "square bracket" i 
[${1}]${2} 
endsnippet 
# 大括号 brace 
snippet br "brace" i
{
	${1}
}${2}
endsnippet

# 单引号 single quote，设定为 se 而非 sq，避免与 q 冲突
snippet se "single quote" I
'${1}'${2}
endsnippet
# 双引号 quote
snippet q "quote" I
"${1}"${2}
endsnippet
# 指针符号 arrow 
snippet ar "arrow" i 
->${1} 
endsnippet 
# dot 
snippet d "dot" i 
.${1} 
endsnippet

# 作用域 scope 
snippet s "scope" i 
::${1} 
endsnippet


















